{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-4c503020227742a8.js","src/index.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/examples/Example_1.ts","../src/index.ts","../src/props/index.ts","../src/props/renderMap.ts","../src/intrinsics/utils.ts","../src/utils/index.ts","../src/utils/css.ts","../src/utils/html.ts","../src/intrinsics/types.ts","../src/props/utils.ts","../src/props/effects.ts","../src/config.ts","../src/components/index.ts","../src/intrinsics/index.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"5c1b77e3b71e74eb\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n    } catch (err) {\n      if (err.message) {\n        console.error(err.message);\n      }\n      ws = {};\n    }\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  if (ws instanceof WebSocket) {\n    ws.onerror = function (e) {\n      if (e.message) {\n        console.error(e.message);\n      }\n    };\n    ws.onclose = function () {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    };\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import Example from './examples/Example_1';\n\nconst element = Example();\n\ndocument.body.append(element);","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import { createEffect, createProps, BUTTON, DIV, H1, H6, H2 } from \"../../../src\";\n\ntype AppProps = {\n    theme: 'light' | 'dark',\n    user: undefined | {username: string}\n}\n\nconst props = createProps<AppProps>({\n    theme: 'dark',\n    user: undefined\n}, [\n    // make sure light theme is appropriate\n    createEffect('theme', (p) => {\n        const date = new Date();\n        const isNight = date.getHours() < 6 || date.getHours() > 18;\n        if (p.theme === 'light' && isNight){\n            console.log('Nope');\n            p.theme = 'dark';\n        }\n    }),\n        // keep the user perpetually signed in\n    createEffect(['user'], (p) => {\n        if (!p.user) {\n            setTimeout(() => {\n                p.user = { username: \"snakgoat\" }\n            }, 3000)\n        }\n    })\n]);\n\nexport default function HomePage () {\n    return (\n        DIV({ id: 'app' },\n            DIV(props, p => [\n                { id: 'home-page' },\n                !p.user ? (\n                    H2('Loading Information...')\n                ) : (\n                    H1(`Welcome ${p.user.username}`)\n                ),\n                BUTTON(\n                    {onclick: () => p.theme = 'light'}, \n                    \"Change Theme\"\n                ),\n                BUTTON(\n                    {onclick: () => p.user = undefined}, \n                    \"Sign Out\"\n                )\n            ]),\n            H6('Come Again!')\n        )\n    )\n}","export {createProps, createEffect} from './props';\nexport {createComponent, Component} from './components';\nexport {css, html} from \"./utils\";\nexport * from './intrinsics';","import { RenderMap, __PROPS_RENDER_MAP__ as PROPS_RENDER_MAP } from \"./renderMap\";\nimport { isModifier, isProxySymbol, type Modifiers } from \"./utils\";\nexport { createEffect } from \"./effects\";\n\nfunction handleModifiers<T extends {}>(props: T, key: keyof T, modifiers: Modifiers<T> | undefined) {\n    if (!modifiers) return;\n    for (const modifier of modifiers) {\n        if (isModifier(modifier) && modifier.isRun(key)) {\n            const returnObject = modifier.run(props);\n            if (returnObject) {\n                for (const k in returnObject) {\n                    (props as any)[k] = returnObject[k];\n                }\n            }\n        }\n    }\n}\n\nexport function createProps<T extends {}>(input: T, modifiers?: Modifiers<T>) {\n    // CREATE PROPS\n    const props = new Proxy(input, {\n        set(target: T, property, newValue) {\n            // set target value\n            target[property as keyof T] = newValue as T[keyof T];\n            // add to RenderMap\n            const renderMap = PROPS_RENDER_MAP.get(props);\n            // handle modifiers\n            handleModifiers(props, property as keyof T, modifiers);\n            // render attached elements\n            if (renderMap) renderMap.renderEach(props);\n\n            return true;\n        },\n        get(target, key) {\n            if (key === isProxySymbol) return true;\n            else return (target as any)[key];\n        }\n    });\n    // REASSIGN TO RUN ALL EFFECTS\n    Object.assign(props, input);\n\n    // ADD TO RENDER MAP\n    PROPS_RENDER_MAP.set(props, new RenderMap());\n\n    return props;\n}","import { RenderFunction } from \"../intrinsics/types\";\nimport { setElementProperties } from \"../intrinsics/utils\";\n\nexport class RenderMap<T extends {}> extends Map<HTMLElement, RenderFunction<HTMLElement, T>> {\n    constructor() {\n        super();\n    }\n    renderEach(props: T) {\n        for (const [element, renderFn] of this) {\n            const elementProperties = renderFn.call(element, props);\n            setElementProperties(element, ...elementProperties);\n        }\n    }\n}\n\nexport const __PROPS_RENDER_MAP__ = new Map<object, RenderMap<any>>();","import { camelToDashed } from \"../utils\";\nimport {\n    type CreateElementParameters,\n    type CreateIntrinsicParameters,\n    type HTMLChild,\n    isAttributes,\n    isHTMLChildren,\n    type Attributes,\n    type HTMLIntrinsicTagName,\n    isHTMLChild,\n    HTMLTagName,\n    HTMLElementFromTagName\n} from \"./types\";\nimport {isProps} from \"../props/utils\";\nimport { __PROPS_RENDER_MAP__ } from \"../props/renderMap\";\nimport { HTMLCustomElementTagName } from \"../intrinsics/types\";\nimport { Configuration } from \"../config\";\n\n\nexport function setElementAttributes<T extends HTMLElement>(element: T, attrs: Attributes<T>) {\n    let attr: keyof Attributes<T>;\n    for (attr in attrs) {\n        try {\n            let attrValue = attrs[attr];\n            if (!(attr in element) && typeof attrValue === \"string\"){\n                element.setAttribute(attr, attrValue);\n            }\n            else if (attr === \"style\" && typeof attrValue === \"object\"){\n                const style = Object.entries(attrValue as object).map(([key,val]) => `${camelToDashed(key)}:${val};`).join(\"\\n  \");\n                (element as any).style = style;\n            } else {\n                (element as any)[attr] = attrValue;\n            }\n        }\n        catch (e){\n            console.warn(e);\n        }\n    }\n}\n\nexport function setElementChildren<T extends HTMLElement>(element:T, ...children:HTMLChild[]){\n    for (const _children of children){\n        if (Array.isArray(_children)){\n            for (const child of _children){\n                setElementChildren(element, child);\n            }\n        }\n        else if (typeof _children === \"string\"){\n            element.innerHTML = _children;\n        }\n        else if (_children instanceof HTMLElement){\n            element.append(_children);\n        }\n        else {\n            throw new TypeError('child not of type HTMLChildren')\n        }\n    }\n\n}\n\nexport function setElementProperties<T extends HTMLElement>(element:T, ...params:CreateElementParameters<T>){\n    const [arg0, ...arg1] = params;\n    if (isAttributes(arg0)){\n        setElementAttributes(element, arg0);\n        if (isHTMLChildren(arg1)){\n            element.innerHTML = \"\";\n            setElementChildren(element, ...arg1);\n        }\n    }\n    else if (isHTMLChildren(arg0)){\n        element.innerHTML = \"\";\n        setElementChildren(element, ...arg0);\n    }\n    else if (isHTMLChild(arg0)){\n        element.innerHTML = \"\";\n        setElementChildren(element, arg0);\n    }\n}\n\nexport function createElement<T extends HTMLIntrinsicTagName | HTMLCustomElementTagName>(tagName: T) : HTMLElementFromTagName<T> {\n    const element = document.createElement(tagName);\n    if (Configuration.get().components.autoUpgrade){\n        if (customElements.get(tagName)) {\n            customElements.upgrade(element);\n        }\n    }\n    return element as HTMLElementFromTagName<T>;\n}\n\nexport function createIntrinsicElement<T extends HTMLTagName, Props extends {} = any>(\n    tagName: T,\n    ...params: CreateIntrinsicParameters<HTMLElementFromTagName<T>, Props>\n): HTMLElementFromTagName<T> {\n    const element = createElement(tagName);\n    \n    if (isProps<Props>(params[0]) && typeof params[1] === \"function\") {\n        const [props, renderFn] = params;\n        __PROPS_RENDER_MAP__.get(props)?.set(element, renderFn as any);\n        const elementProperties = renderFn.call(element as any, props);\n        setElementProperties(element, ...elementProperties);\n    }\n    else {\n        setElementProperties(element, ...params as any);\n    }\n    return element\n}\n\nexport function createElementFactory<T extends HTMLTagName>(tagName: T) {\n    return <P extends {} = any>(\n        ...params: CreateIntrinsicParameters<HTMLElementFromTagName<T>, P>\n    ) => createIntrinsicElement(tagName, ...params)\n}","export {css} from './css';\nexport {html} from './html'\n\nexport function camelToDashed(input:string) {\n    return input.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\nexport function dashedToCamel(input: string): string {\n    return input.replace(/-([a-z])/g, (match, group) => group.toUpperCase());\n}\n","import { Properties as CSSProperties } from \"csstype\"\n\nexport function css(strs:TemplateStringsArray, ...values:any[]){\n    return strs.map((s, i) => s + (values[i] ?? \"\")).join('')\n}\n\nexport namespace css {\n    type AssignParameters = (\n        [assignee:HTMLElement, styles:string|CSSProperties] | \n        [assignee:CSSStyleDeclaration, styles:CSSProperties]\n    );\n    export function assign(...parameters: AssignParameters){\n        const [assignee, styles] = parameters;\n        if (assignee instanceof HTMLElement){\n            if (typeof styles === \"string\"){\n                (assignee as any).style = styles;\n            } else {\n                Object.assign(assignee.style, styles);\n            }\n        }\n        else if (assignee instanceof CSSStyleDeclaration){\n            if (typeof styles === \"string\"){\n                throw new TypeError('assigned styles must be intersection of CSSStyleDeclaration')\n            }\n            Object.assign(assignee, styles);\n        }\n        else {\n            throw new TypeError('Invalid assignee parameter. Assignee must be of type \"HTMLElement\" or \"CSSStyleDeclaration\"')\n        }\n    }\n}\n","\nexport function html(strs:TemplateStringsArray, ...values:any[]){\n    return strs.map((s, i) => s + (values[i] ?? \"\")).join('')\n}","import { Properties as CSSProperties } from \"csstype\"\nimport { isProps } from \"../props/utils\";\n\nexport type HTMLIntrinsicTagName = keyof HTMLElementTagNameMap;\n\nexport type HTMLCustomElementTagName = `${string}-${string}`;\n\nexport type HTMLTagName = HTMLIntrinsicTagName | HTMLCustomElementTagName;\n\nexport type HTMLElementFromTagName<T extends HTMLIntrinsicTagName | HTMLCustomElementTagName> = T extends HTMLIntrinsicTagName ? HTMLElementTagNameMap[T] : HTMLElement\n\nexport type Attributes<T extends HTMLElement> = Partial<Omit<T, \"style\">> & {\n    style?: CSSProperties | string\n}\n\nexport type HTMLChild = (\n    string |\n    HTMLElement | \n    HTMLChild[]\n)\n\nexport type RenderFunction<T extends HTMLElement, P extends {} = any> = (\n    (this:T, props:P) => CreateElementParameters<T>\n)\n\nexport type CreateElementParameters<T extends HTMLElement> = (\n    [...children:HTMLChild[]] |\n    [attributes?:Attributes<T>, ...children:HTMLChild[]]\n)\n\nexport type CreatePropifiedElementParameters<T extends HTMLElement, Props extends {} = any> =  [\n    props:Props, renderFn:RenderFunction<T, Props>\n]\n\nexport type CreateIntrinsicParameters<T extends HTMLElement, Props extends {} = any> = (\n    CreateElementParameters<T> | \n    CreatePropifiedElementParameters<T,Props>\n)\n\nexport function isHTMLChild(params:any) : params is HTMLChild {\n    return (\n        typeof params === \"string\" ||\n        params instanceof HTMLElement || \n        Array.isArray(params)\n    )\n}\n\nexport function isHTMLChildren(params:any) : params is HTMLChild[] {\n    return (\n        Array.isArray(params)\n    )\n}\n\nexport function isAttributes<T extends HTMLElement>(params:any) : params is Attributes<T> {\n    return !!params && !isHTMLChildren(params) && !isHTMLChild(params) && !isProps(params)\n}","import {Effect} from \"./effects\";\n\nexport type Modifiers<T extends {}> = (\n    Effect<T>\n)[];\n\nexport const isModifier = <T extends {}> (anything:any) : anything is Modifiers<T> => {\n    return (\n        anything instanceof Effect\n    )\n}\n\nexport const isProxySymbol = Symbol(\"isProxy\");\n\nexport const isProps = <Props> (props:any) : props is Props => {\n    return props && props[isProxySymbol];\n}\n","export class Effect<T extends {}> {\n    dependencies: (keyof T)[];\n    constructor(dependencies:(keyof T)[] | keyof T, public callback: (props:T) => Partial<T>|void){\n        this.dependencies = !Array.isArray(dependencies) ? [dependencies] : dependencies;\n    }\n    isRun(key: keyof T){\n        return this.dependencies.includes(key);\n    }\n    run(props:T){\n        return this.callback.call({}, props);\n    }\n}\n\nexport function createEffect<T extends {}>(...params:ConstructorParameters<typeof Effect<T>>){\n    return new Effect<T>(...params);\n}\n","const CONFIG:Configuration = {\n    components: {\n        autoUpgrade: false\n    }\n};\n\nexport interface Configuration {\n    components: Configuration.ComponentsConfiguration;\n}\n\nexport namespace Configuration {\n    export interface ComponentsConfiguration {\n        /**\n         * @description automatically calls `customElements.upgrade` upon component creation\n         * @default false*/\n        autoUpgrade: boolean\n    }\n\n    export const configure = (config:Partial<Configuration>) => {\n        let key: keyof Configuration;\n        for (key in config){\n            Object.assign(CONFIG, config[key]);\n        }\n        return CONFIG;\n    }\n\n    export const get = () => CONFIG;\n}\n\n\n","import { CreateIntrinsicParameters, HTMLCustomElementTagName } from \"../intrinsics/types\"\nimport { createIntrinsicElement } from \"../intrinsics/utils\"\n\n\nexport abstract class Component extends HTMLElement {\n    /**\n     * @description Attributes whose change in value triggers `attributeChangedCallback` \n     * @see  */\n    static observedAttributes: string[];\n    /**\n     * @description Invoked when the custom element is first connected to the document's DOM.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Web_components#connectedcallback*/\n    connectedCallback?(): void\n    /**\n     * @description Invoked when the custom element is disconnected from the document's DOM.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Web_components#disconnectedcallback*/\n    disconnectedCallback?(): void\n    /**\n     * @description Invoked when the custom element is moved to a new document.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Web_components#adoptedcallback*/\n    adoptedCallback?(): void\n    /**\n     * @description Invoked when one of the custom element's attributes is added, removed, or changed.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Web_components#attributechangedcallback*/\n    attributeChangedCallback?(): void\n}\n\n/**\n * @description A factory class used for creating a rendering function for you custom elements.\n * @example\n    import { createComponent, Component, H1, P } from \"domalive\";\n    const TestApp = createComponent(\n        'test-app',\n        class extends HTMLElement implements Component {\n            connectedCallback(): void {\n                this.style.color = \"red\";\n                this.style.background = \"blue\";\n            }\n        }\n    );\n\n    document.body.append(\n        TestApp(\n            {id: \"root\"}, \n            H1('Hello!'),\n            P('How do you like my app?')\n        )\n    )\n */\nexport function createComponent<T extends HTMLCustomElementTagName, C extends typeof HTMLElement>(tagName: T, classDefinition: C) {\n    customElements.define(tagName, classDefinition);\n    return <P extends {} = any>(\n        ...params: CreateIntrinsicParameters<InstanceType<C>, P>\n    ) => createIntrinsicElement(tagName as any, ...params);\n}","import { createElementFactory } from \"./utils\";\n\n\n/**\n * #### HTMLAnchorElement\n * ```html\n * <a>\n * ```\n * @description creates an `HTMLAnchorElement` instance.\n * @example\n * ```typescript\n * const a:HTMLAnchorElement =\n *     A(\n *         {className: 'a'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $a = \n *     A(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const A = createElementFactory(\"a\")\n/**\n * #### HTMLAreaElement\n * ```html\n * <area>\n * ```\n * @description creates an `HTMLAreaElement` instance.\n * @example ```typescript\n * const areaElement = AREA({className: 'area'});\n * ```\n */\nexport const AREA = createElementFactory(\"area\")\n/**\n * #### HTMLAudioElement\n * ```html\n * <audio>\n * ```\n * @description creates an `HTMLAudioElement` instance.\n * @example\n * ```typescript\n * const audio:HTMLAudioElement =\n *     AUDIO(\n *         {className: 'audio'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $audio = \n *     AUDIO(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const AUDIO = createElementFactory(\"audio\")\n/**\n * #### HTMLElement\n * ```html\n * <abbr>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const abbr:HTMLElement =\n *     ABBR(\n *         {className: 'abbr'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $abbr = \n *     ABBR(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const ABBR = createElementFactory(\"abbr\")\n/**\n * #### HTMLElement\n * ```html\n * <address>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const address:HTMLElement =\n *     ADDRESS(\n *         {className: 'address'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $address = \n *     ADDRESS(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const ADDRESS = createElementFactory(\"address\")\n/**\n * #### HTMLElement\n * ```html\n * <article>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const article:HTMLElement =\n *     ARTICLE(\n *         {className: 'article'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $article = \n *     ARTICLE(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const ARTICLE = createElementFactory(\"article\")\n/**\n * #### HTMLElement\n * ```html\n * <aside>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const aside:HTMLElement =\n *     ASIDE(\n *         {className: 'aside'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $aside = \n *     ASIDE(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const ASIDE = createElementFactory(\"aside\")\n/**\n * #### HTMLBRElement\n * ```html\n * <br>\n * ```\n * @description creates an `HTMLBRElement` instance.\n * @example ```typescript\n * const brElement = BR({className: 'br'});\n * ```\n */\nexport const BR = createElementFactory(\"br\")\n/**\n * #### HTMLElement\n * ```html\n * <b>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const b:HTMLElement =\n *     B(\n *         {className: 'b'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $b = \n *     B(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const B = createElementFactory(\"b\")\n/**\n * #### HTMLElement\n * ```html\n * <bdi>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const bdi:HTMLElement =\n *     BDI(\n *         {className: 'bdi'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $bdi = \n *     BDI(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const BDI = createElementFactory(\"bdi\")\n/**\n * #### HTMLElement\n * ```html\n * <bdo>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const bdo:HTMLElement =\n *     BDO(\n *         {className: 'bdo'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $bdo = \n *     BDO(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const BDO = createElementFactory(\"bdo\")\n/**\n * #### HTMLBaseElement\n * ```html\n * <base>\n * ```\n * @description creates an `HTMLBaseElement` instance.\n * @example ```typescript\n * const baseElement = BASE({className: 'base'});\n * ```\n */\nexport const BASE = createElementFactory(\"base\")\n/**\n * #### HTMLBodyElement\n * ```html\n * <body>\n * ```\n * @description creates an `HTMLBodyElement` instance.\n * @example\n * ```typescript\n * const body:HTMLBodyElement =\n *     BODY(\n *         {className: 'body'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $body = \n *     BODY(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const BODY = createElementFactory(\"body\")\n/**\n * #### HTMLButtonElement\n * ```html\n * <button>\n * ```\n * @description creates an `HTMLButtonElement` instance.\n * @example\n * ```typescript\n * const button:HTMLButtonElement =\n *     BUTTON(\n *         {className: 'button'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $button = \n *     BUTTON(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const BUTTON = createElementFactory(\"button\")\n/**\n * #### HTMLCanvasElement\n * ```html\n * <canvas>\n * ```\n * @description creates an `HTMLCanvasElement` instance.\n * @example\n * ```typescript\n * const canvas:HTMLCanvasElement =\n *     CANVAS(\n *         {className: 'canvas'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $canvas = \n *     CANVAS(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const CANVAS = createElementFactory(\"canvas\")\n/**\n * #### HTMLElement\n * ```html\n * <cite>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const cite:HTMLElement =\n *     CITE(\n *         {className: 'cite'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $cite = \n *     CITE(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const CITE = createElementFactory(\"cite\")\n/**\n * #### HTMLElement\n * ```html\n * <code>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const code:HTMLElement =\n *     CODE(\n *         {className: 'code'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $code = \n *     CODE(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const CODE = createElementFactory(\"code\")\n/**\n * #### HTMLElement\n * ```html\n * <colgroup>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const colgroup:HTMLElement =\n *     COLGROUP(\n *         {className: 'colgroup'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $colgroup = \n *     COLGROUP(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const COLGROUP = createElementFactory(\"colgroup\")\n/**\n * #### HTMLElement\n * ```html\n * <dd>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const dd:HTMLElement =\n *     DD(\n *         {className: 'dd'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $dd = \n *     DD(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const DD = createElementFactory(\"dd\")\n/**\n * #### HTMLDListElement\n * ```html\n * <dl>\n * ```\n * @description creates an `HTMLDListElement` instance.\n * @example\n * ```typescript\n * const dl:HTMLDListElement =\n *     DL(\n *         {className: 'dl'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $dl = \n *     DL(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const DL = createElementFactory(\"dl\")\n/**\n * #### HTMLDataElement\n * ```html\n * <data>\n * ```\n * @description creates an `HTMLDataElement` instance.\n * @example\n * ```typescript\n * const data:HTMLDataElement =\n *     DATA(\n *         {className: 'data'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $data = \n *     DATA(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const DATA = createElementFactory(\"data\")\n/**\n * #### HTMLDataListElement\n * ```html\n * <datalist>\n * ```\n * @description creates an `HTMLDataListElement` instance.\n * @example\n * ```typescript\n * const datalist:HTMLDataListElement =\n *     DATALIST(\n *         {className: 'datalist'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $datalist = \n *     DATALIST(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const DATALIST = createElementFactory(\"datalist\")\n/**\n * #### HTMLDetailsElement\n * ```html\n * <details>\n * ```\n * @description creates an `HTMLDetailsElement` instance.\n * @example\n * ```typescript\n * const details:HTMLDetailsElement =\n *     DETAILS(\n *         {className: 'details'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $details = \n *     DETAILS(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const DETAILS = createElementFactory(\"details\")\n/**\n * #### HTMLDialogElement\n * ```html\n * <dialog>\n * ```\n * @description creates an `HTMLDialogElement` instance.\n * @example\n * ```typescript\n * const dialog:HTMLDialogElement =\n *     DIALOG(\n *         {className: 'dialog'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $dialog = \n *     DIALOG(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const DIALOG = createElementFactory(\"dialog\")\n/**\n * #### HTMLDivElement\n * ```html\n * <div>\n * ```\n * @description creates an `HTMLDivElement` instance.\n * @example\n * ```typescript\n * const div:HTMLDivElement =\n *     DIV(\n *         {className: 'div'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $div = \n *     DIV(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const DIV = createElementFactory(\"div\")\n/**\n * #### HTMLElement\n * ```html\n * <em>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const em:HTMLElement =\n *     EM(\n *         {className: 'em'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $em = \n *     EM(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const EM = createElementFactory(\"em\")\n/**\n * #### HTMLEmbedElement\n * ```html\n * <embed>\n * ```\n * @description creates an `HTMLEmbedElement` instance.\n * @example ```typescript\n * const embedElement = EMBED({className: 'embed'});\n * ```\n */\nexport const EMBED = createElementFactory(\"embed\")\n/**\n * #### HTMLFieldSetElement\n * ```html\n * <fieldset>\n * ```\n * @description creates an `HTMLFieldSetElement` instance.\n * @example\n * ```typescript\n * const fieldset:HTMLFieldSetElement =\n *     FIELDSET(\n *         {className: 'fieldset'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $fieldset = \n *     FIELDSET(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const FIELDSET = createElementFactory(\"fieldset\")\n/**\n * #### HTMLElement\n * ```html\n * <figure>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const figure:HTMLElement =\n *     FIGURE(\n *         {className: 'figure'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $figure = \n *     FIGURE(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const FIGURE = createElementFactory(\"figure\")\n/**\n * #### HTMLElement\n * ```html\n * <footer>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const footer:HTMLElement =\n *     FOOTER(\n *         {className: 'footer'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $footer = \n *     FOOTER(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const FOOTER = createElementFactory(\"footer\")\n/**\n * #### HTMLFormElement\n * ```html\n * <form>\n * ```\n * @description creates an `HTMLFormElement` instance.\n * @example\n * ```typescript\n * const form:HTMLFormElement =\n *     FORM(\n *         {className: 'form'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $form = \n *     FORM(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const FORM = createElementFactory(\"form\")\n/**\n * #### HTMLElement\n * ```html\n * <hgroup>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const hgroup:HTMLElement =\n *     HGROUP(\n *         {className: 'hgroup'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $hgroup = \n *     HGROUP(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const HGROUP = createElementFactory(\"hgroup\")\n/**\n * #### HTMLHRElement\n * ```html\n * <hr>\n * ```\n * @description creates an `HTMLHRElement` instance.\n * @example ```typescript\n * const hrElement = HR({className: 'hr'});\n * ```\n */\nexport const HR = createElementFactory(\"hr\")\n/**\n * #### HTMLHeadElement\n * ```html\n * <head>\n * ```\n * @description creates an `HTMLHeadElement` instance.\n * @example\n * ```typescript\n * const head:HTMLHeadElement =\n *     HEAD(\n *         {className: 'head'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $head = \n *     HEAD(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const HEAD = createElementFactory(\"head\")\n/**\n * #### HTMLHeadingElement\n * ```html\n * <h1>\n * ```\n * @description creates an `HTMLHeadingElement` instance.\n * @example\n * ```typescript\n * const h1:HTMLHeadingElement =\n *     H1(\n *         {className: 'h1'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $h1 = \n *     H1(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const H1 = createElementFactory(\"h1\")\n/**\n * #### HTMLHeadingElement\n * ```html\n * <h2>\n * ```\n * @description creates an `HTMLHeadingElement` instance.\n * @example\n * ```typescript\n * const h2:HTMLHeadingElement =\n *     H2(\n *         {className: 'h2'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $h2 = \n *     H2(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const H2 = createElementFactory(\"h2\")\n/**\n * #### HTMLHeadingElement\n * ```html\n * <h3>\n * ```\n * @description creates an `HTMLHeadingElement` instance.\n * @example\n * ```typescript\n * const h3:HTMLHeadingElement =\n *     H3(\n *         {className: 'h3'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $h3 = \n *     H3(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const H3 = createElementFactory(\"h3\")\n/**\n * #### HTMLHeadingElement\n * ```html\n * <h4>\n * ```\n * @description creates an `HTMLHeadingElement` instance.\n * @example\n * ```typescript\n * const h4:HTMLHeadingElement =\n *     H4(\n *         {className: 'h4'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $h4 = \n *     H4(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const H4 = createElementFactory(\"h4\")\n/**\n * #### HTMLHeadingElement\n * ```html\n * <h5>\n * ```\n * @description creates an `HTMLHeadingElement` instance.\n * @example\n * ```typescript\n * const h5:HTMLHeadingElement =\n *     H5(\n *         {className: 'h5'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $h5 = \n *     H5(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const H5 = createElementFactory(\"h5\")\n/**\n * #### HTMLHeadingElement\n * ```html\n * <h6>\n * ```\n * @description creates an `HTMLHeadingElement` instance.\n * @example\n * ```typescript\n * const h6:HTMLHeadingElement =\n *     H6(\n *         {className: 'h6'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $h6 = \n *     H6(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const H6 = createElementFactory(\"h6\")\n/**\n * #### HTMLHtmlElement\n * ```html\n * <html>\n * ```\n * @description creates an `HTMLHtmlElement` instance.\n * @example\n * ```typescript\n * const html:HTMLHtmlElement =\n *     HTML(\n *         {className: 'html'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $html = \n *     HTML(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const HTML = createElementFactory(\"html\")\n/**\n * #### HTMLElement\n * ```html\n * <kbd>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const kbd:HTMLElement =\n *     KBD(\n *         {className: 'kbd'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $kbd = \n *     KBD(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const KBD = createElementFactory(\"kbd\")\n/**\n * #### HTMLModElement\n * ```html\n * <ins>\n * ```\n * @description creates an `HTMLModElement` instance.\n * @example\n * ```typescript\n * const ins:HTMLModElement =\n *     INS(\n *         {className: 'ins'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $ins = \n *     INS(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const INS = createElementFactory(\"ins\")\n/**\n * #### HTMLElement\n * ```html\n * <i>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const i:HTMLElement =\n *     I(\n *         {className: 'i'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $i = \n *     I(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const I = createElementFactory(\"i\")\n/**\n * #### HTMLIFrameElement\n * ```html\n * <iframe>\n * ```\n * @description creates an `HTMLIFrameElement` instance.\n * @example\n * ```typescript\n * const iframe:HTMLIFrameElement =\n *     IFRAME(\n *         {className: 'iframe'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $iframe = \n *     IFRAME(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const IFRAME = createElementFactory(\"iframe\")\n/**\n * #### HTMLImageElement\n * ```html\n * <img>\n * ```\n * @description creates an `HTMLImageElement` instance.\n * @example ```typescript\n * const imgElement = IMG({className: 'img'});\n * ```\n */\nexport const IMG = createElementFactory(\"img\")\n/**\n * #### HTMLInputElement\n * ```html\n * <input>\n * ```\n * @description creates an `HTMLInputElement` instance.\n * @example ```typescript\n * const inputElement = INPUT({className: 'input'});\n * ```\n */\nexport const INPUT = createElementFactory(\"input\")\n/**\n * #### HTMLLIElement\n * ```html\n * <li>\n * ```\n * @description creates an `HTMLLIElement` instance.\n * @example\n * ```typescript\n * const li:HTMLLIElement =\n *     LI(\n *         {className: 'li'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $li = \n *     LI(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const LI = createElementFactory(\"li\")\n/**\n * #### HTMLLabelElement\n * ```html\n * <label>\n * ```\n * @description creates an `HTMLLabelElement` instance.\n * @example\n * ```typescript\n * const label:HTMLLabelElement =\n *     LABEL(\n *         {className: 'label'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $label = \n *     LABEL(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const LABEL = createElementFactory(\"label\")\n/**\n * #### HTMLLegendElement\n * ```html\n * <legend>\n * ```\n * @description creates an `HTMLLegendElement` instance.\n * @example\n * ```typescript\n * const legend:HTMLLegendElement =\n *     LEGEND(\n *         {className: 'legend'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $legend = \n *     LEGEND(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const LEGEND = createElementFactory(\"legend\")\n/**\n * #### HTMLLinkElement\n * ```html\n * <link>\n * ```\n * @description creates an `HTMLLinkElement` instance.\n * @example ```typescript\n * const linkElement = LINK({className: 'link'});\n * ```\n */\nexport const LINK = createElementFactory(\"link\")\n/**\n * #### HTMLElement\n * ```html\n * <main>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const main:HTMLElement =\n *     MAIN(\n *         {className: 'main'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $main = \n *     MAIN(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const MAIN = createElementFactory(\"main\")\n/**\n * #### HTMLMapElement\n * ```html\n * <map>\n * ```\n * @description creates an `HTMLMapElement` instance.\n * @example\n * ```typescript\n * const map:HTMLMapElement =\n *     MAP(\n *         {className: 'map'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $map = \n *     MAP(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const MAP = createElementFactory(\"map\")\n/**\n * #### HTMLMenuElement\n * ```html\n * <menu>\n * ```\n * @description creates an `HTMLMenuElement` instance.\n * @example\n * ```typescript\n * const menu:HTMLMenuElement =\n *     MENU(\n *         {className: 'menu'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $menu = \n *     MENU(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const MENU = createElementFactory(\"menu\")\n/**\n * #### HTMLElement\n * ```html\n * <mark>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const mark:HTMLElement =\n *     MARK(\n *         {className: 'mark'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $mark = \n *     MARK(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const MARK = createElementFactory(\"mark\")\n/**\n * #### HTMLElement\n * ```html\n * <nav>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const nav:HTMLElement =\n *     NAV(\n *         {className: 'nav'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $nav = \n *     NAV(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const NAV = createElementFactory(\"nav\")\n/**\n * #### HTMLElement\n * ```html\n * <noscript>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const noscript:HTMLElement =\n *     NOSCRIPT(\n *         {className: 'noscript'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $noscript = \n *     NOSCRIPT(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const NOSCRIPT = createElementFactory(\"noscript\")\n/**\n * #### HTMLMetaElement\n * ```html\n * <meta>\n * ```\n * @description creates an `HTMLMetaElement` instance.\n * @example ```typescript\n * const metaElement = META({className: 'meta'});\n * ```\n */\nexport const META = createElementFactory(\"meta\")\n/**\n * #### HTMLMeterElement\n * ```html\n * <meter>\n * ```\n * @description creates an `HTMLMeterElement` instance.\n * @example\n * ```typescript\n * const meter:HTMLMeterElement =\n *     METER(\n *         {className: 'meter'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $meter = \n *     METER(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const METER = createElementFactory(\"meter\")\n/**\n * #### HTMLModElement\n * ```html\n * <del>\n * ```\n * @description creates an `HTMLModElement` instance.\n * @example\n * ```typescript\n * const del:HTMLModElement =\n *     DEL(\n *         {className: 'del'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $del = \n *     DEL(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const DEL = createElementFactory(\"del\")\n/**\n * #### HTMLOListElement\n * ```html\n * <ol>\n * ```\n * @description creates an `HTMLOListElement` instance.\n * @example\n * ```typescript\n * const ol:HTMLOListElement =\n *     OL(\n *         {className: 'ol'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $ol = \n *     OL(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const OL = createElementFactory(\"ol\")\n/**\n * #### HTMLObjectElement\n * ```html\n * <object>\n * ```\n * @description creates an `HTMLObjectElement` instance.\n * @example\n * ```typescript\n * const object:HTMLObjectElement =\n *     OBJECT(\n *         {className: 'object'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $object = \n *     OBJECT(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const OBJECT = createElementFactory(\"object\")\n/**\n * #### HTMLOptGroupElement\n * ```html\n * <optgroup>\n * ```\n * @description creates an `HTMLOptGroupElement` instance.\n * @example\n * ```typescript\n * const optgroup:HTMLOptGroupElement =\n *     OPTGROUP(\n *         {className: 'optgroup'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $optgroup = \n *     OPTGROUP(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const OPTGROUP = createElementFactory(\"optgroup\")\n/**\n * #### HTMLOptionElement\n * ```html\n * <option>\n * ```\n * @description creates an `HTMLOptionElement` instance.\n * @example\n * ```typescript\n * const option:HTMLOptionElement =\n *     OPTION(\n *         {className: 'option'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $option = \n *     OPTION(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const OPTION = createElementFactory(\"option\")\n/**\n * #### HTMLOutputElement\n * ```html\n * <output>\n * ```\n * @description creates an `HTMLOutputElement` instance.\n * @example\n * ```typescript\n * const output:HTMLOutputElement =\n *     OUTPUT(\n *         {className: 'output'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $output = \n *     OUTPUT(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const OUTPUT = createElementFactory(\"output\")\n/**\n * #### HTMLParagraphElement\n * ```html\n * <p>\n * ```\n * @description creates an `HTMLParagraphElement` instance.\n * @example\n * ```typescript\n * const p:HTMLParagraphElement =\n *     P(\n *         {className: 'p'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $p = \n *     P(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const P = createElementFactory(\"p\")\n/**\n * #### HTMLPictureElement\n * ```html\n * <picture>\n * ```\n * @description creates an `HTMLPictureElement` instance.\n * @example\n * ```typescript\n * const picture:HTMLPictureElement =\n *     PICTURE(\n *         {className: 'picture'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $picture = \n *     PICTURE(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const PICTURE = createElementFactory(\"picture\")\n/**\n * #### HTMLPreElement\n * ```html\n * <pre>\n * ```\n * @description creates an `HTMLPreElement` instance.\n * @example\n * ```typescript\n * const pre:HTMLPreElement =\n *     PRE(\n *         {className: 'pre'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $pre = \n *     PRE(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const PRE = createElementFactory(\"pre\")\n/**\n * #### HTMLProgressElement\n * ```html\n * <progress>\n * ```\n * @description creates an `HTMLProgressElement` instance.\n * @example\n * ```typescript\n * const progress:HTMLProgressElement =\n *     PROGRESS(\n *         {className: 'progress'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $progress = \n *     PROGRESS(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const PROGRESS = createElementFactory(\"progress\")\n/**\n * #### HTMLElement\n * ```html\n * <rt>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const rt:HTMLElement =\n *     RT(\n *         {className: 'rt'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $rt = \n *     RT(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const RT = createElementFactory(\"rt\")\n/**\n * #### HTMLElement\n * ```html\n * <rp>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const rp:HTMLElement =\n *     RP(\n *         {className: 'rp'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $rp = \n *     RP(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const RP = createElementFactory(\"rp\")\n/**\n * #### HTMLElement\n * ```html\n * <ruby>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const ruby:HTMLElement =\n *     RUBY(\n *         {className: 'ruby'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $ruby = \n *     RUBY(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const RUBY = createElementFactory(\"ruby\")\n/**\n * #### HTMLElement\n * ```html\n * <small>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const small:HTMLElement =\n *     SMALL(\n *         {className: 'small'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $small = \n *     SMALL(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const SMALL = createElementFactory(\"small\")\n/**\n * #### HTMLQuoteElement\n * ```html\n * <q>\n * ```\n * @description creates an `HTMLQuoteElement` instance.\n * @example\n * ```typescript\n * const q:HTMLQuoteElement =\n *     Q(\n *         {className: 'q'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $q = \n *     Q(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const Q = createElementFactory(\"q\")\n/**\n * #### HTMLQuoteElement\n * ```html\n * <blockquote>\n * ```\n * @description creates an `HTMLQuoteElement` instance.\n * @example\n * ```typescript\n * const blockquote:HTMLQuoteElement =\n *     BLOCKQUOTE(\n *         {className: 'blockquote'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $blockquote = \n *     BLOCKQUOTE(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const BLOCKQUOTE = createElementFactory(\"blockquote\")\n/**\n * #### HTMLScriptElement\n * ```html\n * <script>\n * ```\n * @description creates an `HTMLScriptElement` instance.\n * @example\n * ```typescript\n * const script:HTMLScriptElement =\n *     SCRIPT(\n *         {className: 'script'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $script = \n *     SCRIPT(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const SCRIPT = createElementFactory(\"script\")\n/**\n * #### HTMLSelectElement\n * ```html\n * <select>\n * ```\n * @description creates an `HTMLSelectElement` instance.\n * @example\n * ```typescript\n * const select:HTMLSelectElement =\n *     SELECT(\n *         {className: 'select'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $select = \n *     SELECT(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const SELECT = createElementFactory(\"select\")\n/**\n * #### HTMLSlotElement\n * ```html\n * <slot>\n * ```\n * @description creates an `HTMLSlotElement` instance.\n * @example\n * ```typescript\n * const slot:HTMLSlotElement =\n *     SLOT(\n *         {className: 'slot'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $slot = \n *     SLOT(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const SLOT = createElementFactory(\"slot\")\n/**\n * #### HTMLSourceElement\n * ```html\n * <source>\n * ```\n * @description creates an `HTMLSourceElement` instance.\n * @example ```typescript\n * const sourceElement = SOURCE({className: 'source'});\n * ```\n */\nexport const SOURCE = createElementFactory(\"source\")\n/**\n * #### HTMLSpanElement\n * ```html\n * <span>\n * ```\n * @description creates an `HTMLSpanElement` instance.\n * @example\n * ```typescript\n * const span:HTMLSpanElement =\n *     SPAN(\n *         {className: 'span'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $span = \n *     SPAN(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const SPAN = createElementFactory(\"span\")\n/**\n * #### HTMLStyleElement\n * ```html\n * <style>\n * ```\n * @description creates an `HTMLStyleElement` instance.\n * @example\n * ```typescript\n * const style:HTMLStyleElement =\n *     STYLE(\n *         {className: 'style'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $style = \n *     STYLE(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const STYLE = createElementFactory(\"style\")\n/**\n * #### HTMLElement\n * ```html\n * <sub>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const sub:HTMLElement =\n *     SUB(\n *         {className: 'sub'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $sub = \n *     SUB(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const SUB = createElementFactory(\"sub\")\n/**\n * #### HTMLElement\n * ```html\n * <summary>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const summary:HTMLElement =\n *     SUMMARY(\n *         {className: 'summary'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $summary = \n *     SUMMARY(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const SUMMARY = createElementFactory(\"summary\")\n/**\n * #### HTMLElement\n * ```html\n * <search>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const search:HTMLElement =\n *     SEARCH(\n *         {className: 'search'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $search = \n *     SEARCH(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const SEARCH = createElementFactory(\"search\")\n/**\n * #### HTMLElement\n * ```html\n * <section>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const section:HTMLElement =\n *     SECTION(\n *         {className: 'section'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $section = \n *     SECTION(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const SECTION = createElementFactory(\"section\")\n/**\n * #### HTMLTableCaptionElement\n * ```html\n * <caption>\n * ```\n * @description creates an `HTMLTableCaptionElement` instance.\n * @example\n * ```typescript\n * const caption:HTMLTableCaptionElement =\n *     CAPTION(\n *         {className: 'caption'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $caption = \n *     CAPTION(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const CAPTION = createElementFactory(\"caption\")\n/**\n * #### HTMLTableCellElement\n * ```html\n * <th>\n * ```\n * @description creates an `HTMLTableCellElement` instance.\n * @example\n * ```typescript\n * const th:HTMLTableCellElement =\n *     TH(\n *         {className: 'th'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $th = \n *     TH(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const TH = createElementFactory(\"th\")\n/**\n * #### HTMLTableCellElement\n * ```html\n * <td>\n * ```\n * @description creates an `HTMLTableCellElement` instance.\n * @example\n * ```typescript\n * const td:HTMLTableCellElement =\n *     TD(\n *         {className: 'td'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $td = \n *     TD(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const TD = createElementFactory(\"td\")\n/**\n * #### HTMLTableColElement\n * ```html\n * <col>\n * ```\n * @description creates an `HTMLTableColElement` instance.\n * @example ```typescript\n * const colElement = COL({className: 'col'});\n * ```\n */\nexport const COL = createElementFactory(\"col\")\n/**\n * #### HTMLTableElement\n * ```html\n * <table>\n * ```\n * @description creates an `HTMLTableElement` instance.\n * @example\n * ```typescript\n * const table:HTMLTableElement =\n *     TABLE(\n *         {className: 'table'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $table = \n *     TABLE(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const TABLE = createElementFactory(\"table\")\n/**\n * #### HTMLTableRowElement\n * ```html\n * <tr>\n * ```\n * @description creates an `HTMLTableRowElement` instance.\n * @example\n * ```typescript\n * const tr:HTMLTableRowElement =\n *     TR(\n *         {className: 'tr'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $tr = \n *     TR(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const TR = createElementFactory(\"tr\")\n/**\n * #### HTMLTableSectionElement\n * ```html\n * <thead>\n * ```\n * @description creates an `HTMLTableSectionElement` instance.\n * @example\n * ```typescript\n * const thead:HTMLTableSectionElement =\n *     THEAD(\n *         {className: 'thead'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $thead = \n *     THEAD(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const THEAD = createElementFactory(\"thead\")\n/**\n * #### HTMLTableSectionElement\n * ```html\n * <tfoot>\n * ```\n * @description creates an `HTMLTableSectionElement` instance.\n * @example\n * ```typescript\n * const tfoot:HTMLTableSectionElement =\n *     TFOOT(\n *         {className: 'tfoot'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $tfoot = \n *     TFOOT(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const TFOOT = createElementFactory(\"tfoot\")\n/**\n * #### HTMLTableSectionElement\n * ```html\n * <tbody>\n * ```\n * @description creates an `HTMLTableSectionElement` instance.\n * @example\n * ```typescript\n * const tbody:HTMLTableSectionElement =\n *     TBODY(\n *         {className: 'tbody'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $tbody = \n *     TBODY(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const TBODY = createElementFactory(\"tbody\")\n/**\n * #### HTMLTemplateElement\n * ```html\n * <template>\n * ```\n * @description creates an `HTMLTemplateElement` instance.\n * @example\n * ```typescript\n * const template:HTMLTemplateElement =\n *     TEMPLATE(\n *         {className: 'template'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $template = \n *     TEMPLATE(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const TEMPLATE = createElementFactory(\"template\")\n/**\n * #### HTMLTextAreaElement\n * ```html\n * <textarea>\n * ```\n * @description creates an `HTMLTextAreaElement` instance.\n * @example\n * ```typescript\n * const textarea:HTMLTextAreaElement =\n *     TEXTAREA(\n *         {className: 'textarea'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $textarea = \n *     TEXTAREA(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const TEXTAREA = createElementFactory(\"textarea\")\n/**\n * #### HTMLTimeElement\n * ```html\n * <time>\n * ```\n * @description creates an `HTMLTimeElement` instance.\n * @example\n * ```typescript\n * const time:HTMLTimeElement =\n *     TIME(\n *         {className: 'time'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $time = \n *     TIME(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const TIME = createElementFactory(\"time\")\n/**\n * #### HTMLTitleElement\n * ```html\n * <title>\n * ```\n * @description creates an `HTMLTitleElement` instance.\n * @example\n * ```typescript\n * const title:HTMLTitleElement =\n *     TITLE(\n *         {className: 'title'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $title = \n *     TITLE(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const TITLE = createElementFactory(\"title\")\n/**\n * #### HTMLTrackElement\n * ```html\n * <track>\n * ```\n * @description creates an `HTMLTrackElement` instance.\n * @example ```typescript\n * const trackElement = TRACK({className: 'track'});\n * ```\n */\nexport const TRACK = createElementFactory(\"track\")\n/**\n * #### HTMLElement\n * ```html\n * <u>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const u:HTMLElement =\n *     U(\n *         {className: 'u'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $u = \n *     U(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const U = createElementFactory(\"u\")\n/**\n * #### HTMLUListElement\n * ```html\n * <ul>\n * ```\n * @description creates an `HTMLUListElement` instance.\n * @example\n * ```typescript\n * const ul:HTMLUListElement =\n *     UL(\n *         {className: 'ul'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $ul = \n *     UL(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const UL = createElementFactory(\"ul\")\n/**\n * #### HTMLVideoElement\n * ```html\n * <video>\n * ```\n * @description creates an `HTMLVideoElement` instance.\n * @example\n * ```typescript\n * const video:HTMLVideoElement =\n *     VIDEO(\n *         {className: 'video'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $video = \n *     VIDEO(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const VIDEO = createElementFactory(\"video\")\n/**\n * #### HTMLElement\n * ```html\n * <var>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example\n * ```typescript\n * const var:HTMLElement =\n *     VAR(\n *         {className: 'var'},\n *         'Hello',\n *         SPAN({style:{color:'red'}}, 'World')\n *     )\n * \n// with props\n\n * const props = createProps({name: 'snakgoat', color: 'red'});\n * const $var = \n *     VAR(props, p => [\n *         {style: {color: p.color}},\n *         SPAN(p.name)\n *     ])\n * ```\n */\nexport const VAR = createElementFactory(\"var\")\n/**\n * #### HTMLElement\n * ```html\n * <wbr>\n * ```\n * @description creates an `HTMLElement` instance.\n * @example ```typescript\n * const wbrElement = WBR({className: 'wbr'});\n * ```\n */\nexport const WBR = createElementFactory(\"wbr\")"],"names":[],"version":3,"file":"index.b71e74eb.js.map","sourceRoot":"/__parcel_source_root/"}